#!/bin/bash

# Script d'installation et configuration MinIO sur serveur Proxmox
# Serveur cible: 192.168.88.50
# Ce script configure un portail S3 compatible avec notre plugin

set -e

echo "=== Installation et configuration MinIO S3 Server ==="
echo "Serveur cible: $(hostname -I | awk '{print $1}')"
echo "Date: $(date)"

# Variables de configuration
MINIO_USER="minioadmin"
MINIO_PASSWORD="minioadmin123"
MINIO_DATA_DIR="/opt/minio/data"
MINIO_CONFIG_DIR="/opt/minio/config"
MINIO_SERVICE_FILE="/etc/systemd/system/minio.service"
MINIO_PORT="9000"
MINIO_CONSOLE_PORT="9001"

# D√©tection de l'architecture
ARCH=$(uname -m)
case $ARCH in
    x86_64)
        MINIO_ARCH="amd64"
        ;;
    aarch64)
        MINIO_ARCH="arm64"
        ;;
    *)
        echo "ERREUR: Architecture non support√©e: $ARCH"
        exit 1
        ;;
esac

echo "Architecture d√©tect√©e: $ARCH -> MinIO $MINIO_ARCH"

# V√©rifier les pr√©requis
echo ""
echo "=== V√©rification des pr√©requis ==="

# V√©rifier que nous sommes root
if [ "$(id -u)" != "0" ]; then
   echo "ERREUR: Ce script doit √™tre ex√©cut√© en tant que root"
   exit 1
fi

# V√©rifier la connectivit√© internet
echo "Test de connectivit√© internet..."
if ! ping -c 1 8.8.8.8 > /dev/null 2>&1; then
    echo "ATTENTION: Pas de connectivit√© internet d√©tect√©e"
    echo "Assurez-vous d'avoir acc√®s √† internet pour t√©l√©charger MinIO"
fi

# Arr√™ter MinIO s'il est d√©j√† en cours d'ex√©cution
if systemctl is-active --quiet minio 2>/dev/null; then
    echo "Arr√™t du service MinIO existant..."
    systemctl stop minio
fi

# Cr√©er les r√©pertoires n√©cessaires
echo ""
echo "=== Cr√©ation des r√©pertoires ==="
mkdir -p "$MINIO_DATA_DIR"
mkdir -p "$MINIO_CONFIG_DIR"
mkdir -p /usr/local/bin

echo "‚úì R√©pertoires cr√©√©s:"
echo "  - Donn√©es: $MINIO_DATA_DIR"
echo "  - Configuration: $MINIO_CONFIG_DIR"

# T√©l√©charger MinIO
echo ""
echo "=== T√©l√©chargement de MinIO ==="

MINIO_URL="https://dl.min.io/server/minio/release/linux-${MINIO_ARCH}/minio"
echo "T√©l√©chargement depuis: $MINIO_URL"

if command -v wget > /dev/null 2>&1; then
    wget -O /usr/local/bin/minio "$MINIO_URL"
elif command -v curl > /dev/null 2>&1; then
    curl -L -o /usr/local/bin/minio "$MINIO_URL"
else
    echo "ERREUR: wget ou curl requis pour t√©l√©charger MinIO"
    exit 1
fi

# Rendre MinIO ex√©cutable
chmod +x /usr/local/bin/minio

# V√©rifier l'installation
if [ ! -f /usr/local/bin/minio ]; then
    echo "ERREUR: √âchec du t√©l√©chargement de MinIO"
    exit 1
fi

echo "‚úì MinIO t√©l√©charg√© et install√©"

# Cr√©er un utilisateur pour MinIO (optionnel, peut fonctionner avec root)
if ! id minio > /dev/null 2>&1; then
    echo ""
    echo "=== Cr√©ation de l'utilisateur MinIO ==="
    useradd -r -s /sbin/nologin -d "$MINIO_DATA_DIR" minio
    echo "‚úì Utilisateur 'minio' cr√©√©"
else
    echo "‚úì Utilisateur 'minio' existe d√©j√†"
fi

# D√©finir les permissions
chown -R minio:minio "$MINIO_DATA_DIR"
chown -R minio:minio "$MINIO_CONFIG_DIR"

# Cr√©er le fichier de service systemd
echo ""
echo "=== Configuration du service systemd ==="

cat > "$MINIO_SERVICE_FILE" << EOF
[Unit]
Description=MinIO Object Storage
After=network.target

[Service]
Type=simple
User=minio
Group=minio
ExecStart=/usr/local/bin/minio server $MINIO_DATA_DIR --address :$MINIO_PORT --console-address :$MINIO_CONSOLE_PORT
Restart=always
RestartSec=5

# Variables d'environnement MinIO
Environment=MINIO_ROOT_USER=$MINIO_USER
Environment=MINIO_ROOT_PASSWORD=$MINIO_PASSWORD
Environment=MINIO_REGION_NAME=us-east-1

# S√©curit√©
ProtectSystem=strict
ProtectHome=true
ReadWritePaths=$MINIO_DATA_DIR
ReadWritePaths=$MINIO_CONFIG_DIR
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOF

echo "‚úì Service systemd configur√©"

# Recharger systemd et activer le service
systemctl daemon-reload
systemctl enable minio

# Ouvrir les ports du firewall (si ufw est install√©)
echo ""
echo "=== Configuration du firewall ==="

if command -v ufw > /dev/null 2>&1; then
    echo "Configuration UFW..."
    ufw allow $MINIO_PORT/tcp comment "MinIO API"
    ufw allow $MINIO_CONSOLE_PORT/tcp comment "MinIO Console"
    echo "‚úì Ports ouverts dans UFW"
elif command -v firewall-cmd > /dev/null 2>&1; then
    echo "Configuration firewalld..."
    firewall-cmd --permanent --add-port=$MINIO_PORT/tcp
    firewall-cmd --permanent --add-port=$MINIO_CONSOLE_PORT/tcp
    firewall-cmd --reload
    echo "‚úì Ports ouverts dans firewalld"
else
    echo "ATTENTION: Aucun firewall d√©tect√©. Assurez-vous que les ports $MINIO_PORT et $MINIO_CONSOLE_PORT sont ouverts"
fi

# D√©marrer MinIO
echo ""
echo "=== D√©marrage de MinIO ==="
systemctl start minio

# Attendre que MinIO soit pr√™t
echo "Attente du d√©marrage de MinIO..."
sleep 5

# V√©rifier le statut
if systemctl is-active --quiet minio; then
    echo "‚úì MinIO est en cours d'ex√©cution"
else
    echo "ERREUR: MinIO n'a pas pu d√©marrer"
    echo "V√©rification des logs:"
    journalctl -u minio -n 20 --no-pager
    exit 1
fi

# Installer le client MinIO (mc) pour la configuration
echo ""
echo "=== Installation du client MinIO (mc) ==="

MC_URL="https://dl.min.io/client/mc/release/linux-${MINIO_ARCH}/mc"
echo "T√©l√©chargement du client MinIO depuis: $MC_URL"

if command -v wget > /dev/null 2>&1; then
    wget -O /usr/local/bin/mc "$MC_URL"
elif command -v curl > /dev/null 2>&1; then
    curl -L -o /usr/local/bin/mc "$MC_URL"
fi

chmod +x /usr/local/bin/mc
echo "‚úì Client MinIO (mc) install√©"

# Configurer l'alias pour le serveur local
echo ""
echo "=== Configuration du client MinIO ==="

SERVER_IP=$(hostname -I | awk '{print $1}')
MINIO_ENDPOINT="http://$SERVER_IP:$MINIO_PORT"

# Attendre que MinIO soit compl√®tement pr√™t
sleep 3

/usr/local/bin/mc alias set local "$MINIO_ENDPOINT" "$MINIO_USER" "$MINIO_PASSWORD"

if [ $? -eq 0 ]; then
    echo "‚úì Client configur√© pour le serveur local"
else
    echo "ATTENTION: Impossible de configurer le client MinIO automatiquement"
    echo "Vous pourrez le faire manuellement apr√®s le d√©marrage"
fi

# Cr√©er un bucket de test pour Proxmox
echo ""
echo "=== Cr√©ation du bucket de test ==="

BUCKET_NAME="proxmox-test"
sleep 2

if /usr/local/bin/mc mb local/$BUCKET_NAME 2>/dev/null; then
    echo "‚úì Bucket '$BUCKET_NAME' cr√©√©"
    
    # D√©finir une politique publique pour le test (optionnel)
    /usr/local/bin/mc anonymous set public local/$BUCKET_NAME 2>/dev/null || true
else
    echo "ATTENTION: Impossible de cr√©er le bucket automatiquement"
fi

# Affichage des informations de configuration
echo ""
echo "============================================================"
echo "              INSTALLATION TERMIN√âE AVEC SUCC√àS"
echo "============================================================"
echo ""
echo "üéØ Configuration MinIO:"
echo "   Endpoint:     http://$SERVER_IP:$MINIO_PORT"
echo "   Console:      http://$SERVER_IP:$MINIO_CONSOLE_PORT"
echo "   Access Key:   $MINIO_USER"
echo "   Secret Key:   $MINIO_PASSWORD"
echo "   Region:       us-east-1"
echo ""
echo "üìÅ R√©pertoires:"
echo "   Donn√©es:      $MINIO_DATA_DIR"
echo "   Configuration: $MINIO_CONFIG_DIR"
echo ""
echo "üîß Configuration Proxmox S3 Plugin:"
echo "   Storage ID:   minio-s3"
echo "   Endpoint:     $SERVER_IP:$MINIO_PORT"
echo "   Bucket:       $BUCKET_NAME"
echo "   Access Key:   $MINIO_USER"
echo "   Secret Key:   $MINIO_PASSWORD"
echo "   Port:         $MINIO_PORT"
echo "   Use SSL:      Non"
echo "   Region:       us-east-1"
echo ""
echo "üåê Acc√®s Web:"
echo "   Console MinIO: http://$SERVER_IP:$MINIO_CONSOLE_PORT"
echo "   (Utilisez les m√™mes credentials pour vous connecter)"
echo ""
echo "‚öôÔ∏è  Commandes utiles:"
echo "   Status:       systemctl status minio"
echo "   Logs:         journalctl -u minio -f"
echo "   Restart:      systemctl restart minio"
echo "   Client:       mc --help"
echo "   List buckets: mc ls local/"
echo ""
echo "üß™ Test de connectivit√©:"
echo "   curl http://$SERVER_IP:$MINIO_PORT/minio/health/live"
echo ""
echo "============================================================"

# Test de connectivit√© final
echo "üîç Test de connectivit√© final..."
sleep 2

if curl -s "http://$SERVER_IP:$MINIO_PORT/minio/health/live" > /dev/null 2>&1; then
    echo "‚úÖ MinIO est accessible et r√©pond correctement"
else
    echo "‚ö†Ô∏è  MinIO ne r√©pond pas sur le port API"
    echo "   V√©rifiez les logs: journalctl -u minio -f"
fi

echo ""
echo "Installation termin√©e ! Vous pouvez maintenant configurer le plugin S3 dans Proxmox."